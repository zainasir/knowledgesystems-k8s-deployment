apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
  creationTimestamp: null
  generation: 1
  labels:
    run: {{ .Values.name }}
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
  name: {{ .Values.name }}
  selfLink: {{ .Values.selfLink }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      run: {{ .Values.name }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: {{ .Values.name }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end}}
    spec:
      {{- if .Values.podVolumes }}
      volumes:
        {{- toYaml .Values.podVolumes | nindent 8 }}
      {{- end }}
      containers:
        - envFrom:
            - configMapRef:
                name: {{ .Values.container.configMapRef }}
          {{- if .Values.container.env }}
          env:
            {{- toYaml .Values.container.env | nindent 12 }}
          {{- end }}
          image: {{ .Values.container.image }}
          {{- if .Values.podVolumeMounts }}
          volumeMounts:
            {{- toYaml .Values.podVolumeMounts | nindent 12 }}
          {{- end }}
          command: [{{- .Values.container.cmd | quote }}]
          {{- if .Values.containerArgs }}
          args:
            {{- toJson .Values.containerArgs | nindent 12 }}
          {{- end }}
          imagePullPolicy: Always
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          name: {{ .Values.name }}
          {{- if .Values.containerPorts }}
          ports:
            {{- toYaml .Values.containerPorts | nindent 12 }}
          {{- end }}
          {{- if .Values.containerResources }}
          resources:
            {{- toYaml .Values.containerResources | nindent 12 }}
          {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      # run on eks-public-cbioportal node group
      nodeSelector:
        eks.amazonaws.com/nodegroup: {{ .Values.nodeGroup }}
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "eks-public-cbioportal"
          effect: "NoSchedule"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}